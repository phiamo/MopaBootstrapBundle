{% extends 'form_div_layout.html.twig' %}
{% from 'MopaBootstrapBundle::flash.html.twig' import flash %}

{# labels #}

{% block form_legend %}
          <legend>{{ label | trans }}</legend>
{% endblock form_legend %}

{% block generic_label %}
{% spaceless %}
    {% if required %}
        {% set attr = attr|merge({'class': attr.class|default('') ~ ' required'}) %}
    {% endif %}
    {% set attr = attr|merge({'class': attr.class|default('') ~ ' control-label'}) %}
    <label{% for attrname,attrvalue in attr %} {{attrname}}="{{attrvalue}}"{% endfor %}>
    {{ label|trans }}
    {% if required %}*{% endif %}
    {% if help_label %}
        <p class="help-block">{{ help_label|trans }}</p>
    {% endif %}
    </label>
{% endspaceless %}
{% endblock %}

{# renders a field label without span class, if e.g field has it#}

{% block field_label_attr_aware_label %}
{% spaceless %}
    {% if label_render %}
    {% set attr = label_attr|merge({'for': id}) %}
    {{ block('field_label') }}
    {% endif %}
{% endspaceless %}
{% endblock field_label_attr_aware_label %}

{# Help #}

{% block field_help %}
    {% if help_inline %}<p class="help-inline">{{ help_inline|trans|raw }}</p>{%endif %}
    {% if help_block %}<p class="help-block">{{ help_block|trans|raw }}</p>{%endif %}
{% endblock field_help %}

{% block field_widget_remove_btn %}
    {% if widget_remove_btn %}
    <input type="button" class="removebtn" value="{{ widget_remove_btn }}">
    {% endif %}
{% endblock field_widget_remove_btn %}

{# Errors #}

{% block form_errors %}
{% spaceless %}
{% if error_delay %}
    {% for child in form %}
        {% if loop.index == 1 %}
            {% if child.set('errors', errors) %}{% endif %}
        {% endif %}
    {% endfor %}
{% else %}
{# prevent deep nesting wrong context copy error #}
{% from 'MopaBootstrapBundle::flash.html.twig' import flash %}
    {% for error in errors %}
		{{ flash('error', error.messageTemplate|trans(error.messageParameters, 'validators')) }}
	{% endfor %}
{% endif %}
{% endspaceless %}
{% endblock form_errors %}

{% block field_errors %}
{% spaceless %}
    {% if errors|length > 0 %}
    <span class="help-{{ block('error_type') }}">
            {% for error in errors %}
                {{ error.messageTemplate|trans(error.messageParameters, 'validators') }} <br>
            {% endfor %}
    </span>
    {% endif %}
{% endspaceless %}
{% endblock field_errors %}

{# used to determine which type of error #}
{% block error_type %}
{% spaceless %}
{% if field_error_type %}
{{ field_error_type }}
{% elseif form.hasParent() != 0 %}
    {% set form = form.parent %}
    {{ block('error_type') }}
{% elseif form.hasParent() == 0 %}
    {{ form.get('error_type') }}
{% endif %}
{% endspaceless %}
{% endblock error_type %}

{# Basic form and field blocks #}

{% block form_widget %}
    {% if prototype is defined %}
    <script type="text/html" {{ block('widget_container_attributes') }}>
        {{ form_row(prototype) }}
    </script>
    {% endif %}
    {% if 'form' in form.get('types') and form.hasParent() == 0 %}
    	{% if render_fieldset %}<fieldset>{% endif %}
    	{% if show_legend %}{{ block('form_legend') }}{% endif %}
    {% endif %}
        {{ block('field_rows_visible') }}
        {{ form_rest(form) }}
    {% if 'form' in form.get('types') and form.hasParent() == 0 %}
    	{% if render_fieldset %}</fieldset>{% endif %}
    {% endif %}
{% endblock form_widget %}

{# only display non hidden fields #}
{% block field_rows_visible %}
    {% if form_errors(form) %}
        <div class="symfony-form-errors">
            {{ form_errors(form) }}
        </div>
    {% endif %}
    {% for child in form.children %}
        {% set isVisible = true %}

        {% for type in child.get('types') %}
            {% if type == 'hidden' %}
                {% set isVisible = false %}
            {% endif %}
        {% endfor %}

        {% if isVisible %}
            {{ form_row(child) }}
        {% endif %}
    {% endfor %}
{% endblock field_rows_visible %}

{% block field_row %}
    {% if not ('form' in form.get('types')) %}
        {% if widget_controls %}
    <div class="control-group{% if errors|length > 0 %} error{% endif %}">
        {% endif %}
    {% endif %}
    {% if 'form' in form.get('types') and form.hasParent() != 0 %}
        {% if show_child_legend %}
            {{ block('form_legend') }}
        {% endif %}
	{% else %}
    	{{ block('field_label_attr_aware_label') }}
    {% endif %}
    {% if not ('form' in form.get('types')) %}
    	{% if widget_controls %}
        <div class="controls">
        {% endif %}
    {% endif %}
    {% if errors|length > 0 %}
        {% set attr = attr|merge({'class': attr.class|default('') ~ ' error'}) %}
    {% endif %}
        {{ widget_prefix|raw }} {{ form_widget(form, {'label': label, 'label_render': label_render, 'attr': attr, 'widget_addon': widget_addon, 'widget_type': widget_type, 'help_inline': help_inline, 'help_block': help_block}) }} {{ widget_suffix|raw }}
    {% if not ('form' in form.get('types')) %}
            {{ block('field_message') }}
        {% if widget_controls %}
        </div>
    </div>
        {% endif %}
    {% endif %}
{% endblock field_row %}

{% block field_message %}
    {% if widget_remove_btn is defined %}
        {{ block('field_widget_remove_btn') }}
    {% endif %}
    {{ form_errors(form) }}
    {{ block('field_help') }}
{% endblock field_message %}

{# Date and Time widgets #}

{% block date_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        {{ block('field_widget') }}
    {% else %}
    <div class="control-group {% if errors|length > 0 %}error{% endif %}">
    	{{ form_label(form, label) }}
        <div class="controls">
            {% set attr = attr|merge({'class': attr.class|default('')}) %}
	        <div {{ block('widget_container_attributes')  }}>
	            {{ date_pattern|replace({
                    '{{ year }}':  form_widget(form.year, {'attr': {'class': attr.widget_class|default('') ~ ' input-mini'}}),
                    '{{ month }}': form_widget(form.month, {'attr': {'class': attr.widget_class|default('') ~ ' input-small'}}),
                    '{{ day }}':   form_widget(form.day, {'attr': {'class': attr.widget_class|default('') ~ ' input-mini'}}),
	            })|raw }}
	        </div>
	        {{ block('help') }}
        </div>
    </div>
    {% endif %}
{% endspaceless %}
{% endblock date_widget %}

{% block datetime_widget %}
    {% if widget == 'single_text' %}
        {{ block('field_widget') }}
    {% else %}
    <div class="control-group {% if errors|length > 0 %}error{% endif %}">
    	{{ form_label(form, label) }}
        <div class="controls">
            {% set attr = attr|merge({'class': attr.class|default('')}) %}
	        <div {{ block('widget_container_attributes') }}>
	            {{ form_errors(form.date) }}
	            {{ form_errors(form.time) }}
	            {{ form_widget(form.date, {'attr': {'class': attr.widget_class|default('')}}) }}
	            {{ form_widget(form.time, {'attr': {'class': attr.widget_class|default('')}}) }}
	        </div>
	        {{ block('field_help') }}
        </div>
    </div>
    {% endif %}
{% endblock datetime_widget %}


{# basic form widgets #}

{% block radio_widget %}
{% spaceless %}
    <input type="radio" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
{% endspaceless %}
{% endblock radio_widget %}

{% block choice_widget %}
    {% if expanded %}
    <div class="control-group {% if errors|length > 0 %}error{% endif %}">
    	{% if label_render %}
    	{{ form_label(form, label) }}
    	{% endif %}
        <div class="controls">
            {% for child in form %}
                <label class="{{ widget_type ~ (multiple ? ' checkbox' : ' radio') }}">
                    {{ form_widget(child, {'attr': {'class': attr.widget_class|default('')}}) }}
            		{{ child.get('label')|trans }}
            	</label>
            {% endfor %}
            {{ block('field_message') }}
        </div>
    </div>
    {% else %}
            <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
                {% if empty_value is not none %}
                <option value="">{{ empty_value|trans }}</option>
                {% endif %}
                {% if preferred_choices|length > 0 %}
                    {% set options = preferred_choices %}
                    {{ block('widget_choice_options') }}
                    {% if choices|length > 0 %}
                <option disabled="disabled">{{ separator }}</option>
                    {% endif %}
                {% endif %}
                {% set options = choices %}
                {{ block('widget_choice_options') }}
            </select>
    {% endif %}
{% endblock choice_widget %}

{% block field_widget %}
{% spaceless %}
    {% set type = type|default('text') %}
    {% if widget_addon.text|default(false) or widget_addon.icon|default(false) %}
    <div class="input-{{ widget_addon.append ? 'append':'prepend' }}">
    	{% if not widget_addon.append %}
    	{{ block('widget_addon') }}
    	{% endif %}
    {% endif %}
    	<input type="{{ type }}" {{ block('widget_attributes') }} value="{{ value }}" />
    {% if widget_addon.text|default(false) or widget_addon.icon|default(false) %}
    	{% if widget_addon.append %}
    	{{ block('widget_addon') }}
    	{% endif %}
    </div>
    {% endif %}
{% endspaceless %}
{% endblock field_widget %}

{% block time_widget %}
{% spaceless %}
    {% if widget == 'single_text' %}
        {{ block('field_widget') }}
    {% else %}
        <div class="control-group {% if errors|length > 0 %}error{% endif %}">
            {{ form_label(form, label) }}
            <div class="controls">
                {% set attr = attr|merge({'class': attr.class|default('')}) %}
                <div {{ block('widget_container_attributes')  }}>
                    {{ form_widget(form.hour, { 'attr': { 'class': 'input-mini' } }) }}:{{ form_widget(form.minute, { 'attr': { 'class': 'input-mini' } }) }}{% if with_seconds %}:{{ form_widget(form.second, { 'attr': { 'class': 'input-mini' } }) }}{% endif %}
                </div>
                {{ block('help') }}
            </div>
        </div>
    {% endif %}
{% endspaceless %}
{% endblock time_widget %}

{% block widget_addon %}
{# prevent deep nesting wrong context copy error #}
{% from 'MopaBootstrapBundle::icons.html.twig' import icon %}
<span class="add-on">{{ (widget_addon.text ? widget_addon.text : icon(widget_addon.icon))|raw  }}</span>
{% endblock widget_addon %}

{% block textarea_widget %}
{% spaceless %}
	{% set attr = attr %}
    <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
{% endspaceless %}
{% endblock textarea_widget %}

{# widget attributes #}

{% block widget_attributes %}
{% spaceless %}
    id="{{ id }}" name="{{ full_name }}"{% if read_only %} disabled="disabled"{% endif %}{% if required %} required="required"{% endif %}{% if max_length %} maxlength="{{ max_length }}"{% endif %}{% if pattern %} pattern="{{ pattern }}"{% endif %}
    {% for attrname,attrvalue in attr %}{{attrname}}="{{attrvalue|trans}}" {% endfor %}
{% endspaceless %}
{% endblock widget_attributes %}
